Simple Simon Game Notes:

===========================================================================

What I need to do:

- Create one big box/shape in CSS to hold the following:

	- COLOR BOXES - 4 boxes total - pastel red ("#FF7575"), pastel blue ("#2F74D0"), pastel yellow ("#FFFF84"), pastel green ("#1FCB4A").
		- ASSIGN each box a number (1-4)
			- Use this number along with jQuery selector
				-"animate" changing opacity? Does the div change colors?

	
	- "START BUTTON"

		- This will be a click-able button in the middle of all 4 buttons.
	
			- WHEN CLICKED- this will prompt Simon(simon) to start the game by "lighting up" one color at random. (animate)

	- Simon (simon)
	
		- "Lights up" random box-color from pastel color to normal color ("red", "blue", "yellow", "green").
	
		- 1 second in between colors lighting up during Simon's turn. 
	
	- Player's turn (player)
	
		- Allow 7 seconds for player to click on the correct box (Correct boxes are defined by Simon) 
	
		- Light up to normal colors when clicked ("red", "blue", "yellow", "green")
	
		- For each correct click, add 3 points to **TOTAL POINTS.
			
			- Then allow player 7 seconds to lick on the next Simon color.
			
				- When player gets color wrong, ** ADD a sound effect or screen effect AND alert the player **"GAME OVER"(pop up box?).
	
		- "Click to begin"


** RYAN'S NOTES **
-	play back animation equence
	- "animate" each html element (jquerty selector) on an array

if theres functionality that both Simon and player need for the user's turn, thats probably a function.


**REMEMBER Appending**






===========================================================================




Rules:

~ The Challenge:
	- To repeat the never-ending random "Light Up's" that generate.
	- To win, you must beat the current high score by passing more levels than anyone else has.
		-(EXTRA) **Leaderboard- Shows the top 5 player initials and game score, but highlights (larger text) top 3 player initials and game score (add date/timestamp also?)

~ General Description:
	- Start Button- When clicked, this will begin the game.
	- (EXTRA) **Leaderboard Button- Shows the top 5 player initials and game score, but highlights (larger text) top 3 player initials and game score (add date/timestamp also?)

~ How To Play: 
	- Press the "START" button in the center of the game, and Simon will give the first signal.
	- Repeat the signal by clicking on the same color.
		- Each time you have repeated a signal, you have passed a round. You get 3 points for each round passed.
	- Simon will duplicate the first signal, and then add another.
	- Player will repeat the two signals by pressing the same colors in order of appearance.
		- Player has 7 seconds to repeat the signals before GAME OVER.
	- Simon will duplicate the first two signals, and then add a third. 
	- The game will continue with this process as long as player doesn't mess up. As soon as player clicks an incorrect color, the game is over and **points are displayed on the screen.
		- When you fail to repeat a sequence exactly or if you take **longer than 7 seconds** to repeat a signal, Simon responds with a **Losing sound and effect**; you have lost and must re-start the game and try again.
	- If at any point in the game you miss a step, you may abandon all points and start over by pressing the START button. 

===========================================================================

Extras:
 (Search this document for all "**" to see what is important/extra)

** Player has NO LONGER THAN 7 seconds to repeat a signal. **

** Losing Sound - must find/create and upload. **

** LOSING EFFECT - must find/create something. **

** Box colors - start as pastel and then brighten up to "normal" color when signal is given AND clicked **

** Set up point counter that adds 3 points to total after round is passed. These points will show up on a Leaderboard after each round, and will be accessable by a button at the bottom of the screen. **

===========================================================================

DON'T FORGET!:

- ** MAKE SURE all code is SPACED, NOT TABBED!!!

- ** MAKE SURE no code is commented out, all comments must be descrptions of code (esp if it is difficult to understand why it is there.)

- ** MAKE SURE comments answer the question "Why"

- ** CLEAN UP code throughout exercise! Make sure it is properly indented and spaced. 

- ** MAKE SURE there are curly braces around every control structure body?

- ** MAKE SURE no bugs are showing in console!

- ** MAKE SURE new features can be added and current features can mostlyyyy be deleted, and the code still functions properly.

- ** MAKE SURE code is broken into discrete pieces.

- ** MAKE SURE code is FREE of duplicate code!

- ** MAKE SURE TO COMMIT AND PUSH TO GIT HUB FREQUENTLY!
	~ All comments must explain the following: "Why am I committing this RIGHT NOW, what did I add/delete/change, and why?"!! * BE DESCRIPTIVE * 



